<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAAEACADIBgAAJgAAABgYAAABACAAiAkAAO4GAAAoAAAAGAAAADAAAAABAAgAAAAAAKAC
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM2YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLAAAAygAAALwAAACaAAAA
        lwAAAL4AAAC4AAAAoAAAAJ0AAAAAAAEBxAABAbQAAQGsAAMDzAADA50ABQXMAAUFywAAAAAABga6AAoK
        vQAKCrQACgqsAAwMwwANDc0AFBTNABERsAASEqsAGRnPAB0dzwAaGrQAISHSACYm0gAoKMcALCzUADIy
        1QA2NtYAOjrWAD4+2ABCQtgA////AACJiQAAAAAAAAAAAAAAAAAAAAAAAAAAAACJiQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACJiQAAAAAAAAAAAAAAAAAAAAAAAAAAAACJiQAAAAAAAAAAAAAAAAAAAAAAAAAAAACJ
        iQAAAAAAAAAAAAAAAAAAAAAAAAAAAACJiQAAAAAAAAAAAAAAAAAAAAAAAAAAAACJiQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACJiQAAAAAAAAAAAAAAAAAAAAAAAAAAAACJiQAAAAAAAAAAAAAAa+Dg39/g22sAAACJ
        iQAAAAAAAAAAAGvf493i4uLi2uTbAACJiQAAAAAAAAAA2+Ti2dnY2NjZ2drbAACJ3+Dba2tra9vf5OLZ
        2NjY2NjZ2drbAACJ2uLa3uPj49ri2djY2NjYR9jZ2drbAACJ3dnZR0dHR9jY2dhH2NjYR9jZ2drbAACJ
        4ufo5eXY2NjY2EdHR0dHR9jZ2drbAACJ+Pr7+vr6+fbz7+flR0dHR0fY2drbAACJ+Pv8/P39/v7+/v36
        9vDlR0fY2NrbAACJ+Pn6+vv7/Pz9/f7+/v779u/Z2drbAACJ9Pf3+fn5+vr7+/z8/P3+/vz379rbAACJ
        8PT29vf39/n5+fr6+vj18vLy8eTbAACJ7vDz8/P09vb39/f38eZrAAAAAGtrAACJ7u/v8PDw8/P09PPt
        2wAAAAAAAAAAAACJ5OPq6uvr6+vs7ebbAAAAAAAAAAAAAACJ3Gtra9vba2trAAAAAAAAAAAAAAAAAJ//
        /wCf//8An///AJ///wCf//8An///AJ///wCf//8An/wDAJ/wAQCf4AEAgAABAIAAAQCAAAEAgAABAIAA
        AQCAAAEAgAABAIAAAQCAAAEAgAB5AIAB/wCAA/8AgB//ACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAA
        AAAAAAAAAAAAAAAAAAAAMmXZADFl8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmXZADJl2wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmXZADJl2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAMWT+ADJl2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmXZADJl2wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAMmXZADJl2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmXZADJl2wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAmQEAAKEBAACpAQAA
        rwEAAKsBAAClAQAAnQEAAJkBAACZAQAAAAAAMmXZADJl2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACvAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAMmXZADFl2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZAQAAAAAAAAAAAACZWQAA
        masAAJzYAACe6AAAoe4AAJ/qAACd4gAAm8sAAJmnAACZaQAAAAAAMmXZADJl3gAAAAAAAKgBAACeAQAA
        mQEAAJkBAACYAQAAmQEAAJsBAAAAAAAAAAAAAJmhAACi8wAAs/sAAL/8AADF/AAAxv0AAMb8AADC/QAA
        vfwAAK79AACa2wAAAAAAMmXZACdw7gAAAAAAAAAAAAAAAAAAowcAAMUBAADIAQAArwMAAAAAAACaQAAA
        mrQAAKj5AADE/AAAyv0AAMr9AADL/QAAy/4AAMv9AADK/gAAyv0AALz9AACa2wAAAAAAMmXZABl//gAA
        ofkAAJ7pAACbzQAAmbEAAJmeAACZkwAAmaQAAJrEAACf7QAAr/wAAMX9AADK/gAAy/4AAMv+AADL/gAA
        y/8AAMv+AADK/wAAyv4AALz/AACa3AAAAAAAMmXZABmB/gAAvfwAAMP9AAC9/QAAuPwAALT9AACy/AAA
        tf0AALv8AADE/QAAyv4AAMv+AADL/gAAy/4AAMv+AADL/gAAzP8AAMv+AADK/wAAyv4AALz/AACa3AAA
        AAAAMmXZABmB/gAAv/0AAMr+AADK/gAAzPwAAMz9AADM/AAAzP0AAMv9AADL/gAAyv4AAMv+AADM/gAA
        y/8AAMv+AADL/gAAzP8AAMv+AADK/wAAyv4AALz/AACa3AAAAAAAMmXZABmC/wUFwf4FBcz/BQXL/wQE
        zP4DA8z/AQHL/gAAy/8AAMv+AADL/wAAy/8AAMz/AADM/wAAzP8AAMz+AADM/gAAzP8AAMv+AADK/wAA
        yv4AALz/AACa3AAAAAAAMmXZAx2C/ykpyf4zNNX/NTXV/zQ01f4yMtX/Ly/V/ioq1P8iItL+GRnQ/xAQ
        zv8HB83/AgLM/wAAzP8AAMz+AADM/gAAzP8AAMz+AADL/wAAyv4AALz/AACa3AAAAAAAMmXZAx2C/yoq
        yP43N9b/OTnW/zs71/49Pdj/Pz/Y/kFB2P9DQ9n+RETZ/0JC2P89Pdf/MjLV/yIi0v8REc/+BATM/gAA
        zP8AAMz+AADL/wAAy/4AAL3/AACa3AAAAAAAMmXZAhyC/yMjx/4uL9T/MDDV/zMz1v41Ndb/NzfW/jk5
        1/87O9f+PT3Y/z8/2P9BQdj/Q0PY/0VF2f9CQtj+NjbW/iEh0f4LC839AADK/gAAyv4AALz+AACa3AAA
        AAAAMmXZAhyC/x0dxv4mJtL/KCjT/yoq1P4tLdT/Li7V/jEx1f8yMtX+NDTW/zc31v85Odb+OzvX/jw8
        1/4/P9f9QUHY/EFB1/05OdT8JCTR/QoKzfwAAL39AACa3AAAAAAAMmXZARuC/xYWxP4eHtH/ICDR/yIi
        0v4kJNP/JibT/igo0/8qKtT+LCzU/y4u1f4wMNX+MjLV/jMz0/4pKcX8Ghq0/BISrP0QEKn5ExOs/RAQ
        sPwCAqz9AACa2wAAAAAAMmXZARuB/w8Pw/4VFc//FxfP/xkZ0P4bG9H/HR3R/iAg0f8iItL+JCTS/iYm
        0v4oKNP+JibO/RISsPsDA5zaAACZkgEBmWEAAJpTAACZXgAAmX4AAJmuAACZvAAAAAAAMmXZABqC/gkJ
        wv0NDc3+Dw/O/hERz/0TE8/+FRXQ/RcX0P4ZGdD9HBzR/h0d0P0bG8j8DAyt+gEBmrQAAAAAAAAAAAAA
        AAAwMMgBODjPASYm0gEAAAAAAAAAAAAAAAAAMmXZABl//wICq/4EBLX/BQW5/wcHu/4ICL7/Cgq+/gsL
        vP8LC7r+Cgq0/ggIq/wDA6DsAACapQAAAAAAAAAAAAAAAAAAmAEAAAAAAAAAAAAAAAAAAAAAAACZAQAA
        AAAAMmXZABeAhAAAmJ8AAJi2AACZxgAAmcwAAJraAACa2wAAmc8AAJnDAACZqAAAmXwAAJlBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///8AP///AD///wA///8AP///AD//
        /wA/+AEAP/v/AD/YAQAgMAEAOEABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAA
        AQAAAccAAAO9AAAH/wA=
</value>
  </data>
</root>