<Window x:Name="EditorWindow"
	x:Class="VixenModules.App.CustomPropEditor.Views.CustomPropEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:VixenModules.App.CustomPropEditor.Controls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	    xmlns:commonConverters="clr-namespace:Common.WPFCommon.Converters;assembly=WPFCommon"
	    xmlns:wpfPropertyGrid="http://schemas.denisvuyka.wordpress.com/wpfpropertygrid"
        xmlns:catel="http://schemas.catelproject.com"
        xmlns:viewModels="clr-namespace:VixenModules.App.CustomPropEditor.ViewModels"
        xmlns:views1="clr-namespace:VixenModules.App.CustomPropEditor.Views"
        Title="Custom Prop Editor" Height="700" Width="900" WindowStartupLocation="CenterScreen">
	
		<Window.Resources>
			<ResourceDictionary>
				<ResourceDictionary.MergedDictionaries>
					<ResourceDictionary Source="..\Themes\Theme.xaml"/>
					<ResourceDictionary Source="pack://application:,,,/WPFCommon;component/Theme/Theme.xaml"/>
				</ResourceDictionary.MergedDictionaries>
				<commonConverters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
				<commonConverters:AdditionConverter x:Key="AdditionConverter"/>
				<commonConverters:ColorToSolidBrushConverter x:Key="ColorToSolidBrushConverter"/>
		</ResourceDictionary>
		</Window.Resources>

		<i:Interaction.Behaviors>
			<catel:KeyPressToCommand Command="{Binding NewPropCommand}" Key="N" Modifiers="Control"/>
			<catel:KeyPressToCommand Command="{Binding SaveModelCommand}" Key="S" Modifiers="Control" />
			<catel:KeyPressToCommand Command="{Binding ExitCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=EditorWindow}" Key="F4" Modifiers="Alt"/>
		</i:Interaction.Behaviors>
		<i:Interaction.Triggers>
			<i:EventTrigger EventName="Closing">
				<catel:EventToCommand Command="{Binding ClosingCommand, Mode=OneWay}" PassEventArgsToCommand="True" DisableAssociatedObjectOnCannotExecute="False" />
			</i:EventTrigger>
		</i:Interaction.Triggers>

	<DockPanel Background="{StaticResource BackColorBrush}">
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="File" Name="FileMenu">
				<MenuItem Header="New" Command="{Binding NewPropCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/NewFile_6276.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Open" Command="{Binding OpenPropCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Open_6529.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save" Command="{Binding SaveModelCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Save_6530.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save As" Command="{Binding SaveModelAsCommand}"/>
				<MenuItem Header="Import xModel" Command="{Binding ImportCommand}" CommandParameter="xModel"/>
				<MenuItem Header="Exit" Command="{Binding ExitCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=EditorWindow}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Close_6519.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="Edit" Name="EditMenu">
				<MenuItem Header="Cut" Command="{Binding ElementTreeViewModel.CutCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/cut.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Copy" Command="{Binding ElementTreeViewModel.CopyCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/page_white_copy.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Paste" Command="{Binding ElementTreeViewModel.PasteCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/page_white_paste.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="View">
				<MenuItem Header="Assign Background" Command="{Binding LoadImageCommand}">
					<MenuItem.Icon>
												<Image Source="/Module.App.CustomPropEditor;component/Images/BackgroundImage.png" Width="16" Height="16"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Background Opacity">
					<controls:SliderMenuItem x:Name="OpacitySliderMenu" ItemValue="{Binding DrawingPanelViewModel.Opacity, Mode=TwoWay}">
						<MenuItem Header="10%" controls:SliderMenuItem.ItemValue=".1"></MenuItem>
						<MenuItem Header="20%" controls:SliderMenuItem.ItemValue=".2"></MenuItem>
						<MenuItem Header="30%" controls:SliderMenuItem.ItemValue=".3"></MenuItem>
						<MenuItem Header="40%" controls:SliderMenuItem.ItemValue=".4"></MenuItem>
						<MenuItem Header="50%" controls:SliderMenuItem.ItemValue=".5"></MenuItem>
						<MenuItem Header="60%" controls:SliderMenuItem.ItemValue=".6"></MenuItem>
						<MenuItem Header="70%" controls:SliderMenuItem.ItemValue=".7"></MenuItem>
						<MenuItem Header="80%" controls:SliderMenuItem.ItemValue=".8"></MenuItem>
						<MenuItem Header="90%" controls:SliderMenuItem.ItemValue=".9"></MenuItem>
						<MenuItem Header="100%" controls:SliderMenuItem.ItemValue="1"></MenuItem>
					</controls:SliderMenuItem>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="Tools">
				<MenuItem Header="Vendor Browser" Command="{Binding OpenVendorBrowserCommand}"/>
			</MenuItem>
			<MenuItem Header="Options">
				<MenuItem Header="Preferences" Command="{Binding ColorOptionsCommand}"/>
			</MenuItem>
			<MenuItem Header="Help">
				<MenuItem Header="View Help" Command="{Binding HelpCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/help.png" Width="16" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
		</Menu>
		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem>
				<StackPanel Orientation="Horizontal">
					<StackPanel.Style>
						<Style TargetType="StackPanel">
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=PropDesigner}" Value="False">
									<Setter Property="Visibility" Value="Hidden"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</StackPanel.Style>
					<TextBlock Text="{Binding Path=Coordinates.X, StringFormat='{}{0:0}', ElementName=PropDesigner}"/>
					<TextBlock Text=", "></TextBlock>
					<TextBlock Text="{Binding Path=Coordinates.Y, StringFormat='{}{0:0}', ElementName=PropDesigner}"/>
				</StackPanel>
			</StatusBarItem>
		</StatusBar>
		<Border BorderThickness="0 0 0 1" >
			<Grid Background="{StaticResource BackColorBrush}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="2*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="3*"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="1.85*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>

				<views1:ElementTree Grid.Column="0" Grid.Row="0" />

				<TabControl  Grid.Row="2" Grid.Column="0" Background="{DynamicResource BackColorBrush}"
				             Width="Auto" Margin="5,5,10,5">
					<TabItem Header="Prop Info">
						<TabControl Width="Auto">
							<TabItem Header="General">
								<wpfPropertyGrid:PropertyGrid Background="{StaticResource DisabledShadow}"
						                              ItemSource="{Binding}"
						                              ShowAttachedProperties="False"
						                              ShowReadOnlyProperties="True"
						                              PropertyFilterVisibility="Collapsed"
						                              Margin="5">
									<wpfPropertyGrid:PropertyGrid.Resources>
										<ResourceDictionary>
											<ResourceDictionary.MergedDictionaries>
												<wpfPropertyGrid:KaxamlTheme/>
											</ResourceDictionary.MergedDictionaries>
										</ResourceDictionary>
									</wpfPropertyGrid:PropertyGrid.Resources>
								</wpfPropertyGrid:PropertyGrid>
							</TabItem>
							<TabItem Header="Physical">
								<views1:PhysicalMetadataView DataContext="{Binding PhysicalMetadata}"/>
							</TabItem>
							<TabItem Header="Vendor">
								<views1:VendorMetadataView DataContext="{Binding VendorMetadata}"/>
							</TabItem>
							<TabItem Header="Notes">
								<TabPanel Name="Panel" Background="{StaticResource DisabledShadow}">
									<TextBox Text="{Binding InformationMetadata.Notes}"
									        Margin="5,5,0,0"
									        TextWrapping="Wrap" 
									        AcceptsReturn="True" 
									        AcceptsTab="True" 
									        SpellCheck.IsEnabled="True" 
									        Height="{Binding Path=ActualHeight, ElementName=Panel, Converter={StaticResource AdditionConverter}, ConverterParameter=-10}"
									        Width="{Binding Path=ActualWidth, ElementName=Panel, Converter={StaticResource AdditionConverter}, ConverterParameter=-10}"
											VerticalScrollBarVisibility="Auto"
											HorizontalScrollBarVisibility="Disabled"/>

								</TabPanel>
							</TabItem>
						</TabControl>
					</TabItem>
					<TabItem Header="Element Info">
						<wpfPropertyGrid:PropertyGrid Background="{StaticResource DisabledShadow}"
						                              ItemSource="{Binding ElementTreeViewModel.SelectedItem}"
						                              ShowAttachedProperties="False"
						                              ShowReadOnlyProperties="True"
						                              PropertyFilterVisibility="Collapsed"
						                              Margin="5">
							<wpfPropertyGrid:PropertyGrid.Resources>
								<ResourceDictionary>
									<ResourceDictionary.MergedDictionaries>
										<wpfPropertyGrid:KaxamlTheme/>
									</ResourceDictionary.MergedDictionaries>
								</ResourceDictionary>
							</wpfPropertyGrid:PropertyGrid.Resources>
						</wpfPropertyGrid:PropertyGrid>
					</TabItem>
				</TabControl>
				
				
					
				<!--</Border>-->

				<DockPanel Grid.Column="1" Grid.Row="0" Grid.RowSpan="3">
					<ToolBarTray DockPanel.Dock="Top" Background="{StaticResource BackColorBrush}">
						<ToolBar>
							<RadioButton IsChecked="{Binding DrawingPanelViewModel.IsDrawing}" ToolTip="Draw mode" GroupName="SelectDraw"
							             Width="30" Style="{StaticResource RadioButtonStyle}">
								<Image Source="/Module.App.CustomPropEditor;component/Images/buttonDrawPixel.png" Height="20" Width="20"/>
							</RadioButton>
							<RadioButton IsChecked="{Binding DrawingPanelViewModel.IsDrawing, Converter={StaticResource InverseBooleanConverter}}" 
							             ToolTip="Selection mode" GroupName="SelectDraw"
							             Width="30" Style="{StaticResource RadioButtonStyle}">
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonSelect.png" Height="20" Width="20"/>
							</RadioButton>
							<!--<Separator />
							<Button Command="Copy" ToolTip="Cut">
								<Image Source="/CustomPropEditor;component/Images/cut.png" Height="20"/>
							</Button>
							<Button Command="Paste" ToolTip="Copy">
								<Image Source="/CustomPropEditor;component/Images/copy.png" Height="20"/>
							</Button>
							<Button Command="Paste" ToolTip="Paste">
								<Image Source="/CustomPropEditor;component/Images/paste.png" Height="20"/>
							</Button>-->
							<Separator />
							<Button Command="{Binding LoadImageCommand}" ToolTip="Assign Background">
								<Image Source="/Module.App.CustomPropEditor;component/Images/BackgroundImage.png" Height="20"/>
							</Button>
							<Separator />
							<Button Command="{Binding DrawingPanelViewModel.AlignLeftCommand}" ToolTip="Align Left">
								<Image Source="/Module.App.CustomPropEditor;component/Images/buttonAlignLeft.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.AlignRightCommand}" ToolTip="Align Right">
								<Image Source="/Module.App.CustomPropEditor;component/Images/buttonAlignRight.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.AlignTopsCommand}" ToolTip="Align Top" >
								<Image Source="/Module.App.CustomPropEditor;component/Images/buttonAlignTop.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.AlignBottomsCommand}" ToolTip="Align Bottom" >
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonAlignBottom.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.DistributeHorizontallyCommand}" ToolTip="Distribute Horizontal" >
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonDistributeHorizontal.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.DistributeVerticallyCommand}" ToolTip="Distribute Vertical" >
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonDistributeVertical.png" Height="20"/>
                            </Button>
                            <Separator />
                            <Button Command="{Binding DrawingPanelViewModel.FlipHorizontalCommand}" ToolTip="Flip Horizontal">
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonFlipHorizontal.png" Height="20"/>
                            </Button>
                            <Button Command="{Binding DrawingPanelViewModel.FlipVerticalCommand}" ToolTip="Flip Vertical">
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonFlipVertical.png" Height="20"/>
                            </Button>
                            <Separator />
							<Button Command="{Binding DrawingPanelViewModel.IncreaseLightSizeCommand}" ToolTip="Increase Light Size">
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonBulbBigger.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.DecreaseLightSizeCommand}" ToolTip="Decrease Light Size">
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonBulbSmaller.png" Height="20"/>
							</Button>
							<Button Command="{Binding DrawingPanelViewModel.MatchLightSizeCommand}" ToolTip="Match Light Size">
																<Image Source="/Module.App.CustomPropEditor;component/Images/buttonBulbEqual.png" Height="20"/>
							</Button>
						</ToolBar>
					</ToolBarTray>
					<ScrollViewer  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Background="Black" Margin="10">
						<controls:PropDesigner x:Name="PropDesigner"
                            LightNodeViewModelsSource="{Binding DrawingPanelViewModel.LightNodes}"
                            TransformCommand="{Binding DrawingPanelViewModel.TransformCommand}"
                            IsDrawing="{Binding DrawingPanelViewModel.IsDrawing}"
                            AddLightCommand="{Binding AddLightCommand}"
                            SelectedModels="{Binding DrawingPanelViewModel.SelectedItems}">
							<i:Interaction.Behaviors>
								<catel:KeyPressToCommand Command="{Binding DrawingPanelViewModel.DeleteSelectedLightsCommand}" Key="Delete" />
							</i:Interaction.Behaviors>
							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="{x:Type viewModels:LightViewModel}">
									<ContentControl>
										<Path StrokeThickness="1" Name="GeometryPath">
											<Path.Data >
												<EllipseGeometry Center="{Binding Center}" RadiusX="{Binding Size}" RadiusY="{Binding Size}"></EllipseGeometry>
											</Path.Data>
											<Path.Style>
												<Style TargetType="Path">
													<Setter Property="Fill" Value="{Binding Path=DataContext.DrawingPanelViewModel.LightColor, RelativeSource={RelativeSource AncestorType=ItemsControl}, Mode=OneWay, Converter={StaticResource ColorToSolidBrushConverter}}"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsSelected}" Value="True">
															<Setter Property="Fill" Value="{Binding Path=DataContext.DrawingPanelViewModel.SelectedLightColor, RelativeSource={RelativeSource AncestorType=ItemsControl}, Mode=OneWay,Converter={StaticResource ColorToSolidBrushConverter}}"></Setter>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Path.Style>
										</Path>
									</ContentControl>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Canvas x:Name="DrawingCanvas" 
                                            Height="{Binding DrawingPanelViewModel.Height, Mode=OneWay}" 
                                            Width="{Binding DrawingPanelViewModel.Width, Mode=OneWay}" 
                           
                                            Focusable="True">
										<Canvas.Background>
											<ImageBrush ImageSource="{Binding DrawingPanelViewModel.Image}" Opacity="{Binding DrawingPanelViewModel.Opacity}"></ImageBrush>
										</Canvas.Background>
										
									</Canvas>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</controls:PropDesigner>

					</ScrollViewer>

				</DockPanel>
				<GridSplitter Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Width="3" HorizontalAlignment="Right" VerticalAlignment="Stretch" Background="{StaticResource BorderColorBrush}"/>
				<GridSplitter Grid.Row="1" Grid.Column="0" Width="Auto" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" ResizeDirection="Rows" Background="{StaticResource BorderColorBrush}"/>
			</Grid>
		</Border>
	</DockPanel>
</Window>



