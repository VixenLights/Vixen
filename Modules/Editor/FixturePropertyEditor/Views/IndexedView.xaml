<catel:UserControl x:Class="VixenModules.Editor.FixturePropertyEditor.Views.IndexedView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:catel="http://schemas.catelproject.com"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:common="clr-namespace:Common.WPFCommon.Converters;assembly=WPFCommon"
                   xmlns:local="clr-namespace:VixenModules.Editor.FixturePropertyEditor.Views"
                   mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/WPFCommon;component/Theme/Theme.xaml"/>
				<ResourceDictionary Source="/DataGridThemes;component/ExpressionDark.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<common:InverseBooleanConverter x:Key="InverseBoolConverter" />
			<common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

			<ControlTemplate x:Key="ErrorTemplate">
				<DockPanel LastChildFill="True">
					<Border BorderBrush="Red" BorderThickness="1">
						<AdornedElementPlaceholder />
					</Border>
				</DockPanel>
			</ControlTemplate>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid Background="#444444">
		<Grid.RowDefinitions>
			<RowDefinition Height = "*" />
			<RowDefinition Height = "60" />
		</Grid.RowDefinitions>

		<DataGrid Name="pointDataGrid" AutoGenerateColumns="False" 
				  ItemsSource="{Binding Items}" 
				  SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
				  SelectionChanged="SelectionChanged"
				  Margin="5,5,5,5" 
				  RowHeaderWidth="0" 
				  Grid.Row="0" 
				  Grid.Column="1" 
				  CanUserAddRows="False"
                  VerticalAlignment="Top"
                  DataGridCell.GotFocus="DataGrid_CellGotFocus">

			<DataGrid.Resources>
				<local:BindingProxy x:Key="proxy" Data="{Binding}" />
			</DataGrid.Resources>

			<DataGrid.Columns>

				<DataGridTemplateColumn Header="Name" Width="*">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}"
									   ToolTip="Unique name for the index entry.  This name is used to select the option in effects.">
							</TextBlock>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}" MinWidth="30" 
									 ToolTip="Unique name for the index entry.  This name is used to select the option in effects."/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>


				<DataGridTemplateColumn Header="Use Curve" Width="60">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=UseCurve, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}" 
									  ToolTip="Select for entries that define a range where the user neeeds to pick a specific value within that range.  This entry will be edited using a curve in effects."
									  />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>


				<DataGridTemplateColumn Header="Start Value" Width="65">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding StartValue, ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
									   ToolTip="DMX start value for the index.">
							</TextBlock>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<TextBox MinWidth="30"
									 ToolTip="DMX start value for the index.">
								<TextBox.Text>
									<Binding Path="StartValue" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="true" >
										<Binding.ValidationRules>
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Header="End Value" Width="65">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding EndValue, ValidatesOnDataErrors=True, NotifyOnValidationError=true}"
									   ToolTip="DMX stop value for the index.">
							</TextBlock>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<TextBox MinWidth="30"
									 ToolTip="DMX stop value for the index.">
								<TextBox.Text>
									<Binding Path="EndValue" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="true">
									</Binding>
								</TextBox.Text>
							</TextBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn  Header="Tag" Width="120" 
										 Visibility="{Binding Data.DisplayTag,
										 Converter={StaticResource BooleanToVisibilityConverter},
										 Source={StaticResource proxy}}">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox ItemsSource="{Binding IndexTypes}" 
                         SelectedItem="{Binding Path=IndexType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" 
					     ToolTip="Select a Tag for index items when Vixen needs to be aware of the index value for the Preview or automation.  Click the Help button for additional information."
									  />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn  Header="Image" Width="150" 
										 Visibility="{Binding Data.DisplayImage,
										 Converter={StaticResource BooleanToVisibilityConverter},
										 Source={StaticResource proxy}}">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox ItemsSource="{Binding AvailableImages}" 
							          SelectedItem="{Binding Path=Image, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
									  ToolTip="Select an image to associate with the Gobo item.  The image appears on the timeline when using the Gobo effect."/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
		</DataGrid>


		<WrapPanel Margin="5,0,0,0" Grid.Row="1" >
			<Button Name="Add" Width="40" Height="40" Command="{Binding AddCommand}"  Margin="0,2,2,2"
					ToolTip="Select to Add a new index item.">
				<Image Source="/Resources;component/Add.png"></Image>
			</Button>
			<Button Name="Remove" Width="40" Height="40" Command="{Binding DeleteCommand}"  Margin="2,2,2,2"
					ToolTip="Select to Remove the selected index item.">
				<Image Source="/Resources;component/Delete.png"></Image>
			</Button>
			<Button Width="150" Height="40" Command="{Binding ImportGoboImagesCommand}"  Margin="2,2,2,2" Content="Import Gobo Images"
				Visibility="{Binding DisplayImage, Converter={StaticResource BooleanToVisibilityConverter}}"
					ToolTip="Select to Import png images for the Gobo items.">
			</Button>
		</WrapPanel>

	</Grid>
</catel:UserControl>
