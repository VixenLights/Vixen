<catel:UserControl x:Class="VixenModules.Editor.FixturePropertyEditor.Views.FunctionTypeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:catel="http://schemas.catelproject.com"
	    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	    xmlns:views="clr-namespace:VixenModules.Editor.FixturePropertyEditor.Views"	    
	    xmlns:common="clr-namespace:Common.WPFCommon.Converters;assembly=WPFCommon"
		xmlns:viewModel="clr-namespace:VixenModules.Editor.FixturePropertyEditor.ViewModels"			  
		xmlns:fixture="clr-namespace:VixenModules.App.Fixture;assembly=Fixture"			  
		xmlns:local="clr-namespace:VixenModules.Editor.FixturePropertyEditor.Views"	
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:value="clr-namespace:Vixen.Data.Value;assembly=Vixen"
        mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WPFCommon;component/Theme/Theme.xaml"/>
                <ResourceDictionary Source="/DataGridThemes;component/ExpressionDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <common:InverseBooleanConverter x:Key="InverseBoolConverter" />
            <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <ObjectDataProvider x:Key="myEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type Type="fixture:FixtureFunctionType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="identityEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type Type="value:FunctionIdentity"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
                                    
        </ResourceDictionary>
        
    </UserControl.Resources>

	<Grid Background="#444444" Margin="0,5,0,5">
			<Grid.RowDefinitions>
				<RowDefinition Height = "*" />
				<RowDefinition Height = "60" />
		</Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <GroupBox Header="Functions" Grid.Column="0"  Margin="0,5,5,5">

            <Grid>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height = "*" />
                    <RowDefinition Height = "45" />
                </Grid.RowDefinitions>

                <DataGrid x:Name="functionGrid" AutoGenerateColumns="False" Margin="5,5,5,5" 
				    RowHeaderWidth="0" Grid.Row="0" 
				    Grid.Column="0" 
				    CanUserAddRows="False"
				    ItemsSource="{Binding Items}" 
			        SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
			        SelectionChanged="SelectionChanged"                    
                    DataGridCell.GotFocus="DataGrid_CellGotFocus">

                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Name" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}">
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>




                        <DataGridTemplateColumn  Header="Type" Width="105" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Source={StaticResource myEnum}}" 
                                        SelectedItem="{Binding Path=FunctionTypeEnum, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn Header="Preview Legend" Width="95">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Legend}">
                                        <TextBlock.Style>
                                            <Style>
                                                <Setter Property="TextBlock.Foreground" Value="{StaticResource ForeColorBrush}"/>
                                                <Setter Property="TextBlock.Background" Value="{StaticResource BackColorBrush}"/>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Legend, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>


                <WrapPanel Margin="5,0,0,0" Grid.Row="1">
                    <Button Name="Add" Width="40" Height="40" Command="{Binding AddCommand}" Margin="0,2,2,2">
                        <Image Source="/Resources;component/Add.png"/>
                    </Button>
                    <Button Name="Remove" Width="40" Height="40" Command="{Binding DeleteCommand}" Margin="0,2,2,2">
                        <Image Source="/Resources;component/Delete.png"></Image>
                    </Button>
                </WrapPanel>

            </Grid>

        </GroupBox>


        <GroupBox Header="{Binding GroupBoxTitle}" Grid.Column="1" Foreground="White" Margin="5,5,0,5">
            <Grid>
                <local:ColorWheelView Grid.Column="1" x:Name="ColorWheelControl"  Visibility="{Binding ColorWheelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                </local:ColorWheelView>
                <local:IndexedView Grid.Column="1" x:Name="IndexControl" Visibility="{Binding IndexedVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                </local:IndexedView>
                <local:PanTiltView Grid.Column="1" x:Name="PanTiltControl" Visibility="{Binding PanTiltVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                </local:PanTiltView>
            </Grid>
        </GroupBox>
    </Grid>
</catel:UserControl>
