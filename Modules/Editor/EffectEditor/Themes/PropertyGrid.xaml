<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:VixenModules.Editor.EffectEditor.Converters"
    xmlns:design="clr-namespace:VixenModules.Editor.EffectEditor.Design"
	xmlns:input="clr-namespace:VixenModules.Editor.EffectEditor.Input"
	xmlns:local="clr-namespace:VixenModules.Editor.EffectEditor"
	xmlns:controls1="clr-namespace:Common.WPFCommon.Controls;assembly=WPFCommon"
	xmlns:controls="clr-namespace:VixenModules.Editor.EffectEditor.Controls">

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<converters:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter" />

    <Style TargetType="{x:Type local:EffectPropertyEditorGrid}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1.0">
                    <GradientStop Color="#FF232323" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="1"/>
                    <GradientStop Color="#FF393939" Offset="0.48"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsBackground" Value="#FF404040"/>
        <Setter Property="ItemsForeground" Value="{DynamicResource ForeColorBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:EffectPropertyEditorGrid}">

                    <DockPanel LastChildFill="True" Background="{TemplateBinding Background}">
                        <ContentPresenter FocusManager.IsFocusScope="True" ContentSource="Layout"/>
                    </DockPanel>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type design:PropertyContainer}" TargetType="{x:Type design:PropertyContainer}">
		<Setter Property="Visibility">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter}" UpdateSourceTrigger="PropertyChanged"
				              Mode="OneWay">
					<Binding Path="IsBrowsable" />
					<Binding Path="MatchesFilter" />
				</MultiBinding>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False"/>
		<!--<Setter Property="ToolTip" Value="{Binding Entry.ToolTip, RelativeSource={RelativeSource Self}}" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid Margin="4">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" SharedSizeGroup="PropertyNameSizeGroup" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<design:PropertyNameTextBlock Grid.Column="0" Margin="0,0,8,0" ToolTip="{Binding ToolTip}"
						                              Text="{Binding DisplayName, Mode=OneTime}"
						                              Foreground="{Binding ItemsForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:EffectPropertyEditorGrid}}}" />
						<design:PropertyEditorContentPresenter Grid.Column="1" VerticalAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type design:CategoryContainer}" TargetType="{x:Type design:CategoryContainer}">
		<Setter Property="Visibility">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter}" UpdateSourceTrigger="PropertyChanged"
				              Mode="OneWay">
					<Binding Path="IsBrowsable" />
					<Binding Path="HasVisibleProperties" />
					<Binding Path="MatchesFilter" />
				</MultiBinding>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Expander Header="{Binding Name}"
					          IsExpanded="{Binding Entry.IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
						<design:CategoryEditorContentPresenter />
					</Expander>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>