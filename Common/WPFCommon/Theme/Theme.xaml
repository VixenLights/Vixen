<ResourceDictionary   
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:utils="clr-namespace:Common.WPFCommon.Utils"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:controls="clr-namespace:Common.WPFCommon.Controls"
	xmlns:catel="http://schemas.catelproject.com">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Menu.xaml" />
  <ResourceDictionary Source="DefaultHiddenStyle.xaml"></ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style TargetType="{x:Type catel:Window}">
	    <Setter Property="Background" Value="{StaticResource BackColorBrush}"/>
    </Style>

	<Style BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type DataGrid}">
	    <Setter Property="Background" Value="{DynamicResource BackColorBrush}"/>
    </Style>

	<Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="Background" Value="{DynamicResource BackColorBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource ForeColorBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>


	<Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolTip}" >
					<StackPanel Margin="7,1" >
						<Border Background="{StaticResource BackColorBrush}" CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource BorderColorBrush}">
							<ContentPresenter Margin="7" HorizontalAlignment="Center" VerticalAlignment="Top"/>
						</Border>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap" MaxWidth="400" TextAlignment="Left" Text="{Binding}" Foreground="{StaticResource ForeColorBrush}" Background="{StaticResource BackColorBrush}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Content"
                 Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content"
                 Value="{x:Null}">
                <Setter Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

   <!-- TreeView -->
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="{StaticResource BackColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
    </Style>

    <!--=================================================================
      TreeViewItem
  ==================================================================-->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        Width="15"
                        Height="13"
                        Background="Transparent">
                        <Path x:Name="ExpandPath"
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center" 
                              Margin="1,1,1,1"
                              Fill="{StaticResource ForeColorBrush}"
                              Data="M 4 0 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M 0 4 L 8 4 L 4 8 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                                   StrokeThickness="5"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded,
                              RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForeColorDisabledBrush}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ForeColorDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- Statusbar -->

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="{StaticResource BackColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
    </Style>

    <!-- Button -->

    <Style TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <!--<Setter Property="FontSize" Value="7.5pt"/>-->
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background" CornerRadius="3" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="0,1,0,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.0" Color="#585858" />
                                    <GradientStop Offset="1.2" Color="#282828" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="BackgroundHighlighted" Opacity="0" BorderThickness="0,1,0,1" CornerRadius="3" BorderBrush="#282828">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.0" Color="#505050" />
                                    <GradientStop Offset="1.2" Color="#383838" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="BackgroundSunken" BorderBrush="#000000" BorderThickness="0,0,0,1" CornerRadius="3" />
                        <ContentPresenter x:Name="Content" Margin="5,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource BorderColor}" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#686868" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#282828" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#989898" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#787878" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#383838" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Content" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BackgroundSunken" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Background" Property="Opacity" Value="0" />
                            <Setter TargetName="BackgroundHighlighted" Property="Opacity" Value="1" />
                            <Setter TargetName="BackgroundSunken" Property="BorderBrush" Value="#555" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#777"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This Style is used by the Intelligent Fixture Wizard Navigation Controller to inject Vixen button styles onto the Wizard -->
	<Style x:Key="VixenButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
		<!--<Setter Property="FontSize" Value="7.5pt"/>-->
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="10 10 10 10"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="Background" CornerRadius="3" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="0,1,0,0">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#585858" />
									<GradientStop Offset="1.2" Color="#282828" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="BackgroundHighlighted" Opacity="0" BorderThickness="0,1,0,1" CornerRadius="3" BorderBrush="#282828">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#505050" />
									<GradientStop Offset="1.2" Color="#383838" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="BackgroundSunken" BorderBrush="#000000" BorderThickness="0,0,0,1" CornerRadius="3" />
						<ContentPresenter x:Name="Content" Margin="5,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource BorderColor}" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#686868" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#282828" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#989898" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#787878" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#383838" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Content" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="BackgroundSunken" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Background" Property="Opacity" Value="0" />
							<Setter TargetName="BackgroundHighlighted" Property="Opacity" Value="1" />
							<Setter TargetName="BackgroundSunken" Property="BorderBrush" Value="#555" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#777"/>
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="WizardNavigationButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
		<!--<Setter Property="FontSize" Value="7.5pt"/>-->
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="10 10 10 10"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="Background" CornerRadius="3" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="0,1,0,0">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#585858" />
									<GradientStop Offset="1.2" Color="#282828" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="BackgroundHighlighted" Opacity="0" BorderThickness="0,1,0,1" CornerRadius="3" BorderBrush="#282828">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#505050" />
									<GradientStop Offset="1.2" Color="#383838" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="BackgroundSunken" BorderBrush="#000000" BorderThickness="0,0,0,1" CornerRadius="3" />
						<ContentPresenter x:Name="Content" Margin="5,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource BorderColor}" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#686868" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#282828" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#989898" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#787878" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#383838" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
										<ColorAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Content" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="BackgroundSunken" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Background" Property="Opacity" Value="0" />
							<Setter TargetName="BackgroundHighlighted" Property="Opacity" Value="1" />
							<Setter TargetName="BackgroundSunken" Property="BorderBrush" Value="#555" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#777"/>
							<Setter Property="Opacity" Value="0.75"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Checkbox style RadioButton -->

	<Style x:Key="CheckRadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid>
						<CheckBox
							IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                Path=IsChecked, Mode=TwoWay}"
							IsHitTestVisible="False" Content="{TemplateBinding Content}" />
						<CheckBox
							IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                            Path=IsChecked, Mode=TwoWay}"   
							Content="{TemplateBinding Content}" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Checkbox -->

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="11" Height="11" Margin="0,1,0,0">
                                <Border x:Name="Background" Background="#575757" CornerRadius="0" />
                                <Border x:Name="BackgroundHighlighted" BorderBrush="#808080" BorderThickness="0,0,0,1" CornerRadius="0" />
                                <Border x:Name="BackgroundSunken" BorderBrush="#101010" BorderThickness="0,1,0,0" CornerRadius="0" />
                                <Path x:Name="Arrow" 
                      Margin="0,-2,0,0" 
                      Opacity="0" 
                      Fill="{x:Null}" 
                      Stretch="Fill" 
                      Stroke="{TemplateBinding Foreground}" 
                      StrokeEndLineCap="Round" 
                      StrokeLineJoin="Round" 
                      StrokeStartLineCap="Round" 
                      StrokeThickness="2" 
                      Width="9" 
                      Height="10" 
                      Data="M203.44033,309.51348 L206.49521,313.93147 212.24245,303.99957" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="8,0,0,0" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<!-- Contentless Checkbox -->

    <Style x:Key="ContentlessCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="11" Height="11" Margin="0,1,0,0">
                                <Border x:Name="Background" Background="#575757" CornerRadius="0" />
                                <Border x:Name="BackgroundHighlighted" BorderBrush="#808080" BorderThickness="0,0,0,1" CornerRadius="0" />
                                <Border x:Name="BackgroundSunken" BorderBrush="#101010" BorderThickness="0,1,0,0" CornerRadius="0" />
                                <Path x:Name="Arrow" 
                      Margin="0,-2,0,0" 
                      Opacity="0" 
                      Fill="{x:Null}" 
                      Stretch="Fill" 
                      Stroke="{TemplateBinding Foreground}" 
                      StrokeEndLineCap="Round" 
                      StrokeLineJoin="Round" 
                      StrokeStartLineCap="Round" 
                      StrokeThickness="2" 
                      Width="9" 
                      Height="10" 
                      Data="M203.44033,309.51348 L206.49521,313.93147 212.24245,303.99957" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="0" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Label -->

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
    </Style>

    <!-- ListView -->

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- ItemsControl No background color set as it removes transparency that may be needed. -->
    <Style TargetType="{x:Type ItemsControl}">
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
	</Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}">
        <!--<Style.Resources>
            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        </Style.Resources>-->
        <Setter Property="Background" Value="#FF333333"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->

        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="ListViewItemOutlineHover" TargetType="{x:Type ListViewItem}">
		<Setter Property="Background" Value="#FF333333"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="4,1"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource BackColorBrush}"/>-->
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right" Value="-9"/>
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Background" Value="{StaticResource BorderColorBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="Transparent" Padding="{TemplateBinding Padding}">
						<Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{DynamicResource LinearBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="2,0,2,0"/>
		<Setter Property="Foreground" Value="{DynamicResource ForeColorBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<Grid SnapsToDevicePixels="true">
						<Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="7"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
								<Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
									<ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Border>
							</Grid>
						</Border>
						<Border x:Name="HeaderHoverBorder" BorderThickness="1,1,1,1" Margin="1,1,0,0"/>
						<Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
						<Canvas>
							<Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="HeaderBorder" Value="{DynamicResource LinearHighlightBackgroundBrush}"/>
							<Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
							<!--<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>-->
							<Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="HeaderBorder" Value="{DynamicResource Item.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF95DAF9"/>
							<Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FF7A9EB1"/>
							<!--<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
							<Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBCE4F9"/>-->
							<Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
							<Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
						</Trigger>
						<Trigger Property="Height" Value="Auto">
							<Setter Property="MinHeight" Value="20"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource ForeColorDisabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.4082"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Canvas x:Name="PART_FloatingHeaderCanvas">
								<Rectangle Fill="#FF000000" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}"/>
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}"/>
							<ControlTemplate.Triggers>
								<Trigger Property="Height" Value="Auto">
									<Setter Property="MinHeight" Value="20"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="GridViewContainerStyle" TargetType="{x:Type ListViewItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Background" Value="{DynamicResource BackColorBrush}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="4,1"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{StaticResource ForeColorBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RowButtonContainerStyle" TargetType="{x:Type WrapPanel}" >
	    <Setter Property="Margin" Value="6" />
		<Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

	<Style x:Key="RowButtonRightContainerStyle" TargetType="{x:Type WrapPanel}" BasedOn="{StaticResource RowButtonContainerStyle}">
	    <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
   

	<Style x:Key="RowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
	    <Setter Property="Margin" Value="6, 6, 0, 0" />
	    <Setter Property="MinWidth" Value="100" />
	</Style>

    <Style x:Key="RowRightButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RowButtonStyle}">
	    <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

	<Style x:Key="RowLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
	    <Setter Property="Margin" Value="6, 6, 0, 0" />
    </Style>

    <Style x:Key="RowComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
	    <Setter Property="Margin" Value="6, 6, 0, 0" />
		<Setter Property="MinWidth" Value="100"/>
    </Style>


	<Style TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"></Setter>
	</Style>

	<!-- TextBox -->

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="AllowDrop" Value="true"/>
	    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="utils:TextBoxExtender.SelectAllOnFocus" Value="True"/>
		<Setter Property="CaretBrush" Value="{StaticResource ForeColorBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Background" Background="{StaticResource BackColorBrush}" CornerRadius="2" />
                        <Border x:Name="BackgroundHighlighted" BorderBrush="#808080" BorderThickness="0,0,0,1" CornerRadius="2" />
                        <Border x:Name="BackgroundSunken" BorderBrush="#101010" BorderThickness="0,1,0,0" CornerRadius="2" />
                        <ScrollViewer Margin="0,2,0,0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            <Setter Property="Opacity" Value=".75"/>
                            <Setter Property="IsTabStop" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="utils:TextBoxExtender.SelectAllOnFocus" Value="False"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox -->

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="Bg" Background="{StaticResource BackColorBrush}" CornerRadius="2" />
                        <Border x:Name="Hl" BorderBrush="#808080" BorderThickness="0,0,0,1" CornerRadius="2" />
                        <Border x:Name="Sh" BorderBrush="#101010" BorderThickness="0,1,0,0" CornerRadius="2" />
                        <ScrollViewer Margin="0,2,0,0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#777"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer -->

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
						<ScrollBar x:Name="PART_VerticalScrollBar"
                           Cursor="Arrow"
                           Grid.Column="1"
                           Grid.Row="0"
                           Margin="0,4,4,4"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                            Cursor="Arrow"
                            Orientation="Horizontal"
                            Grid.Column="0"
                            Grid.Row="1"
                            Margin="4,0,4,4"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Visible">
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Margin" Value="0,0,4,0" />
                        </Trigger>
                        <Trigger SourceName="PART_HorizontalScrollBar" Property="Visibility" Value="Visible">
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Margin" Value="0,0,0,4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scrollbar-->

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Border Height="8" Background="#FFF" BorderThickness="0.5,1" CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Border Width="8" Background="#FFF" BorderThickness="1,0.5" CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Width="8">
            <Border Width="8" Background="#18000000" CornerRadius="3"/>
            <Track Name="PART_Track" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButton}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Opacity="0.25" Style="{DynamicResource VerticalScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButton}"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Height="8">
            <Border Height="8" Background="#18000000" CornerRadius="3"/>
            <Track Name="PART_Track" IsDirectionReversed="false">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButton}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Opacity="0.25" Style="{DynamicResource HorizontalScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButton}"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template" Value="{DynamicResource VerticalScrollBarTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{DynamicResource HorizontalScrollBarTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Slider -->

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Path Width="9" Height="16" Margin="2,2,0,0" Fill="#8000" Stretch="Fill" Stroke="#8000" Data="M160,400 L160,310 200,280 240,310 240,400 z"/>
                        <Path Width="9" Height="16" Stretch="Fill" Data="M160,400 L160,310 200,280 240,310 240,400 z">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.05" Color="#666"/>
                                    <GradientStop Offset="0.25" Color="#404040"/>
                                    <GradientStop Offset="0.95" Color="#FF222222"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Offset="0.0" Color="#FFC5C5C5"/>
                                    <GradientStop Offset="0.4" Color="#FF5F5F5F"/>
                                    <GradientStop Offset="0.8" Color="#FF494949"/>
                                </LinearGradientBrush>
                            </Path.Stroke>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderVerticalThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Path Width="9" Height="16" Margin="2,2,0,0" Fill="#8000" Stretch="Fill" Stroke="#8000" Data="M160,400 L160,310 200,280 240,310 240,400 z">
                            <Path.RenderTransform>
                                <RotateTransform Angle="90"></RotateTransform>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="9" Height="16" Stretch="Fill" Data="M160,400 L160,310 200,280 240,310 240,400 z">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.05" Color="#666"/>
                                    <GradientStop Offset="0.25" Color="#404040"/>
                                    <GradientStop Offset="0.95" Color="#FF222222"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Offset="0.0" Color="#FFC5C5C5"/>
                                    <GradientStop Offset="0.4" Color="#FF5F5F5F"/>
                                    <GradientStop Offset="0.8" Color="#FF494949"/>
                                </LinearGradientBrush>
                            </Path.Stroke>
                            <Path.RenderTransform>
                                <RotateTransform Angle="90"></RotateTransform>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSliderTemplate" TargetType="{x:Type Slider}">
        <Grid>
            <TickBar x:Name="TopTick" Height="1" Fill="#7FFF" Placement="Top" SnapsToDevicePixels="True" Visibility="Collapsed"/>
            <Path Height="12" Canvas.Top="11.98" Margin="4,0" Stretch="Fill" Stroke="#2FFF" StrokeThickness="1" Data="M80,320 L560,320 560,290 80,315 z">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="0.198,0.457" EndPoint="0.215,2.283">
                        <GradientStop Offset="0" Color="#3000"/>
                        <GradientStop Offset="0.3" Color="#407F7F7F"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
            <Track x:Name="PART_Track" Height="35">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{DynamicResource SliderButtonStyle}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource SliderThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{DynamicResource SliderButtonStyle}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" Height="1" Canvas.Top="35" Fill="{TemplateBinding Foreground}" Placement="Bottom" SnapsToDevicePixels="True" Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSliderTemplate" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                                  MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar Grid.Column="0" x:Name="TopTick" Width="4" Fill="#7FFF" Placement="Left" SnapsToDevicePixels="True" Visibility="Collapsed"/>
            <Path Grid.Column="1" Width="12" HorizontalAlignment="Left" Margin="0,4" Stretch="Fill" Stroke="#2FFF" StrokeThickness="1" Data="M223.045,39.858003 L224.87833,39.858003 234.045,138.858 223.045,138.858 z">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="0.198,0.457" EndPoint="0.215,2.283">
                        <GradientStop Offset="0" Color="#3000"/>
                        <GradientStop Offset="0.3" Color="#407F7F7F"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
            <Track x:Name="PART_Track" Grid.Column="1" Width="35">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{DynamicResource SliderButtonStyle}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource SliderVerticalThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{DynamicResource SliderButtonStyle}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Column="2" Width="4" Fill="{TemplateBinding Foreground}" Placement="Right" SnapsToDevicePixels="True" Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{DynamicResource VerticalSliderTemplate}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{DynamicResource HorizontalSliderTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Grid Grid.ColumnSpan="2">
                <Border x:Name="Bg" CornerRadius="3" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="0,1,0,0">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0.0" Color="#585858" />
                            <GradientStop Offset="1.2" Color="#282828" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border x:Name="Dn" Opacity="0" BorderThickness="0,1,0,1" CornerRadius="3" BorderBrush="#282828">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0.0" Color="#585858" />
                            <GradientStop Offset="1.2" Color="#383838" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border x:Name="Sh" BorderBrush="#000000" BorderThickness="0,0,0,1" CornerRadius="3" />
                <ContentPresenter x:Name="Content" Margin="0,0,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Grid>
            <Path x:Name="Arrow" Grid.Column="1" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource BorderColor}" Duration="0:0:0.1" />
                            <ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#686868" Duration="0:0:0.1" />
                            <ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#282828" Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
                            <ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
                            <ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#777"/>
                <Setter Property="Opacity" Value="0.75"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="70"/>
        <!--<Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItem}"/>-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
              MinWidth="0" 
              Name="ToggleButton"
              Template="{DynamicResource ComboBoxToggleButton}"
              Foreground="{TemplateBinding Foreground}"
              Grid.Column="2"
              Focusable="false"
              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
              Name="ContentSite"
              IsHitTestVisible="False"
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              Margin="6,0,23,2"
              VerticalAlignment="Center"
              HorizontalAlignment="Left" />
                        <TextBox
              x:Name="PART_EditableTextBox"
              HorizontalAlignment="Left"
              Margin="3,0,23,3"
              VerticalAlignment="Center"
              Background="Transparent"
              Focusable="True"
              Foreground="{TemplateBinding Foreground}"
              IsReadOnly="{TemplateBinding IsReadOnly}"
              Style="{x:Null}"
              Template="{DynamicResource ComboBoxTextBox}"/>
                        <Popup
              Name="Popup"
              Placement="Bottom"
              VerticalOffset="0"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              AllowsTransparency="True"
              Focusable="False"
              PopupAnimation="Fade">

                            <aero:SystemDropShadowChrome Margin="0,0,5,5" CornerRadius="4">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#585858" CornerRadius="4" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <controls:IndexingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </aero:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" SnapsToDevicePixels="true">
                        <ContentPresenter Margin="4,2,4,3" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#707070" />
                        </Trigger>
                        <Trigger Property="controls:IndexingStackPanel.StackLocation" Value="First">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4,4,0,0" />
                        </Trigger>
                        <Trigger Property="controls:IndexingStackPanel.StackLocation" Value="Last">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4" />
                        </Trigger>
                        <Trigger Property="controls:IndexingStackPanel.StackLocation" Value="FirstAndLast">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander -->

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                            <ToggleButton IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          HorizontalContentAlignment="Stretch">
                               <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Path Grid.Column="0"
                          SnapsToDevicePixels="True"
                          IsHitTestVisible="False"
                          Name="Arrow"
                          Margin="8,0,8,0"
                          Fill="#0FFF"
                          RenderTransformOrigin="0.5,0.5"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 0 8 L 5 4 Z"
                          Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </Path.RenderTransform>
                                        </Path>
                                        <ContentPresenter Margin="4" Grid.Column="1" RecognizesAccessKey="True" ContentSource="Header"/>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                        </Border>

                        <!--<theme:Reveal x:Name="ContentReveal" Grid.Row="1" VerticalReveal="FromTopToBottom" HorizontalReveal="None">-->
                        <!-- the extra border here is required because Reveal doesn't account for margins -->
                        <Border Grid.Row="1" Visibility="{Binding Path=IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border BorderThickness="0.5,1,0,0" BorderBrush="#6000" Background="#10FFFFFF" CornerRadius="2,3,2,2" SnapsToDevicePixels="True" Margin="2" >
                                <Border BorderThickness="0,0,0.5,1" BorderBrush="#20FFFFFF" CornerRadius="2,3,2,2">
                                    <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" ToolTipService.IsEnabled="False" />
                                </Border>
                            </Border>
                        </Border>
                        <!--</theme:Reveal>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsExpanded" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="#20FFFFFF" />
                            <Setter TargetName="Border" Property="Cursor" Value="Hand" />
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<DoubleAnimation BeginTime="0:0:0.2" Storyboard.TargetName="ContentReveal" Storyboard.TargetProperty="AnimationProgress" Duration="0:0:0.2" To="1" DecelerationRatio="1" />-->
                                        <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" Duration="0:0:0.2" To="90" DecelerationRatio="1" />
                                        <ColorAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.2" To="#FFF" DecelerationRatio="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="ContentReveal" Storyboard.TargetProperty="AnimationProgress" Duration="0:0:0.2" AccelerationRatio="1" />-->
                                        <DoubleAnimation  Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" Duration="0:0:0.2" AccelerationRatio="1" />
                                        <ColorAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.2" AccelerationRatio="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton -->

	<Style TargetType="{x:Type ToggleButton}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
		<!--<Setter Property="FontSize" Value="7.5pt"/>-->
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="MinWidth" Value="20"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border x:Name="Bg" CornerRadius="3" BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="0,1,0,0">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#585858" />
									<GradientStop Offset="1.2" Color="#FF6A6969" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="Dn" Opacity="0" BorderThickness="0,1,0,1" CornerRadius="3" BorderBrush="#282828" >
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#505050" />
									<GradientStop Offset="1.2" Color="#383838" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="Sh" BorderBrush="#000000" BorderThickness="0,0,0,1" CornerRadius="3" />
						<ContentPresenter x:Name="Content" Margin="0,0,0,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource BorderColor}" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#686868" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#282828" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Content" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Sh" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Bg" Property="Opacity" Value="0" />
							<Setter TargetName="Dn" Property="Opacity" Value="1" />
							<Setter TargetName="Sh" Property="BorderBrush" Value="#555" />
						</Trigger>

						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="Content" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Sh" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Bg" Property="Opacity" Value="0" />
							<Setter TargetName="Dn" Property="Opacity" Value="1" />
							<Setter TargetName="Dn" Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<GradientStop Offset="0.0" Color="#404040" />
										<GradientStop Offset="1.2" Color="#FF000000" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="Sh" Property="BorderBrush" Value="#666" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#777"/>
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PushButtonButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="MinWidth" Value="30"/>
		<Setter Property="Padding" Value="3"></Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border x:Name="Bg" CornerRadius="3" BorderBrush="{StaticResource RaisedHighlight}" BorderThickness="0,1,0,0">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#585858" />
									<GradientStop Offset="1.2" Color="#282828" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="Dn" Opacity="0" BorderThickness="1,1,1,1" CornerRadius="3" BorderBrush="#282828" >
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#505050" />
									<GradientStop Offset="1.2" Color="#383838" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="Sh" BorderBrush="{StaticResource RaisedShadow}" BorderThickness="0,0,0,1" CornerRadius="3" />

						<ContentPresenter
              x:Name="Content"
              Margin="0,0,0,2"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding HorizontalContentAlignment}"
              RecognizesAccessKey="True"/>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#888888" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#686868" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#282828" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:0.1" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
										<ColorAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Content" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Sh" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Bg" Property="Opacity" Value="0" />
							<Setter TargetName="Dn" Property="Opacity" Value="1" />
							<Setter TargetName="Sh" Property="BorderBrush" Value="#555" />
						</Trigger>


						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="Content" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Sh" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform Y="1" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Bg" Property="Opacity" Value="0" />
							<Setter TargetName="Dn" Property="Opacity" Value="1" />
							<Setter TargetName="Dn" Property="BorderBrush" Value="{StaticResource ForeColorBrush}" />
							<Setter TargetName="Dn" Property="Background" Value="{StaticResource Checked}" />
							<Setter TargetName="Sh" Property="BorderBrush" Value="#666" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style TargetType="{x:Type controls:ToggleSwitch}">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CheckedForeground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="CornerRadius" Value="3"/>
        --><!--<Setter Property="FontSize" Value="7.5pt"/>
		<Setter Property="FontWeight" Value="Normal"/>--><!--
        <Setter Property="ThumbBorderThickness" Value="1"/>
        <Setter Property="ThumbCornerRadius" Value="3"/>
        <Setter Property="ThumbGlowColor" Value="#FCFCF6"/>
        <Setter Property="ThumbShineCornerRadius" Value="6,6,5,5"/>
        <Setter Property="UncheckedForeground" Value="{StaticResource ForeColorBrush}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,0"
                                     StartPoint="0,1">
                    <GradientStop Color="#959595"
                                  Offset="0" />
                    <GradientStop Color="#A1A1A1"
                                  Offset="0.5" />
                    <GradientStop Color="#555555"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                    <GradientStop Color="#6298FE"
                                  Offset="0" />
                    <GradientStop Color="#2F6AEA"
                                  Offset="0.5" />
                    <GradientStop Color="#1E41A5"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ThumbBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.0" Color="#505050" />
                    <GradientStop Offset="1.2" Color="#383838" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="UncheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.0" Color="#505050" />
                    <GradientStop Offset="1.2" Color="#383838" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ThumbBorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                    <GradientStop Color="#F6F6F6"
                                  Offset="0" />
                    <GradientStop Color="#959595"
                                  Offset="0.5" />
                    <GradientStop Color="#565656"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="False">
                        <Ellipse x:Name="Ellipse" >
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.5,0.75">
                                    <GradientStop Color="#FF6E6E6E" Offset="0.874"/>
                                    <GradientStop Color="#FF2F2F2F" Offset="0.152"/>
                                    <GradientStop Color="#FF4E4E4E" Offset="0.628"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStop Offset="0.1" Color="#50FFFFFF" />
                                    <GradientStop Offset="0.4" Color="#39FFFFFF" />
                                    <GradientStop Offset="0.7" Color="#3D000000" />
                                    <GradientStop Offset="0.8" Color="#50000000" />
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <Ellipse  Stroke="#28FFFFFF"  Margin="1" />
                        <Path x:Name="Path" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" Stroke="#CCC" StrokeThickness="1.7" Width="6" Height="6" Data="M 0 0 L 6 6 M 6 0 L 0 6 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" >
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.5,0.766">
                                        <GradientStop Color="#FFDA4E26" Offset="0.874"/>
                                        <GradientStop Color="#FF531D0D" Offset="0.013"/>
                                        <GradientStop Color="#FFAB2F0C" Offset="0.628"/>
                                        <GradientStop Color="#FF6C220C" Offset="0.296"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Ellipse" Property="Stroke" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.821" Color="#9EFFFFFF" />
                                        <GradientStop Color="#A81C1C1C" Offset="0.152"/>
                                        <GradientStop Color="#A03A3A3A" Offset="0.565"/>
                                        <GradientStop Color="#9E919191" Offset="0.713"/>
                                        <GradientStop Color="#A6323232" Offset="0.238"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Ellipse" Property="Fill" >
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.5,0.25">
                                        <GradientStop Color="#FFDA4E26" Offset="0.874"/>
                                        <GradientStop Color="#FF8D280C" Offset="0.471"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Path" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="TabItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{StaticResource ForeColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Offset="0.0" Color="#505050" />
		<GradientStop Offset="1.0" Color="#282828" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Offset="0.0" Color="#505050" />
		<GradientStop Offset="1.0" Color="#282828" />
	</LinearGradientBrush>
	
	<Style TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
		<Setter Property="Foreground" Value="{StaticResource ForeColorBrush}"/>
		<Setter Property="Padding" Value="6,1,6,1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderColorBrush}"/>
		<Setter Property="Background" Value="{StaticResource BackColorBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid SnapsToDevicePixels="true">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
							<ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
							                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource BackColorBrush}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"></Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
						</MultiTrigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-2,-1"/>
							<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-1,-2,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-1,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1,-2,-2,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource BackColorBrush}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
							<Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Background" Value="{DynamicResource BackColorBrush}"/>
	</Style>

	<!--<Style TargetType="{x:Type TabControl}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="25" />
							--><!--<RowDefinition Height="*" />--><!--
						</Grid.RowDefinitions>
						<Border
							CornerRadius="4,4,0,0"
							BorderBrush="#777"
							BorderThickness="0,1,0,0">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0.0" Color="#505050" />
									<GradientStop Offset="1.0" Color="#282828" />
								</LinearGradientBrush>
							</Border.Background>
							<StackPanel Orientation="Horizontal">
								<controls:IndexingStackPanel Orientation="Horizontal" IsItemsHost="True" />
								<Rectangle x:Name="Highlight" Width="1" Fill="#2FFF" HorizontalAlignment="Left" />
							</StackPanel>
						</Border>
						
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

	<!-- Checkbox style RadioButton with no content and centered checkbox-->
	<Style x:Key="ContentLessCheckRadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="11" Height="11" Margin="0,1,0,0">
								<Border x:Name="Background" Background="#575757" CornerRadius="0" />
								<Border x:Name="BackgroundHighlighted" BorderBrush="#808080" BorderThickness="0,0,0,1" CornerRadius="0" />
								<Border x:Name="BackgroundSunken" BorderBrush="#101010" BorderThickness="0,1,0,0" CornerRadius="0" />
								<Path x:Name="Arrow" 
								      Margin="0,-2,0,0" 
								      Opacity="0" 
								      Fill="{x:Null}" 
								      Stretch="Fill" 
								      Stroke="{StaticResource ForeColorBrush}" 
								      StrokeEndLineCap="Round" 
								      StrokeLineJoin="Round" 
								      StrokeStartLineCap="Round" 
								      StrokeThickness="2" 
								      Width="9" 
								      Height="10" 
								      Data="M203.44033,309.51348 L206.49521,313.93147 212.24245,303.99957" />
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="0" />
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Arrow" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Arrow" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="HyperLink" TargetType="{x:Type TextBlock}">
	    <Style.Triggers>
		    <Trigger Property="IsMouseOver" Value="true">
			    <Setter Property="Foreground" Value="Red" />
		    </Trigger>
		    <Trigger Property="IsEnabled" Value="false">
			    <Setter Property="Foreground"
			            Value="{StaticResource DisabledForeground}" />
		    </Trigger>
		    <Trigger Property="IsEnabled" Value="true">
			    <Setter Property="Cursor" Value="Hand" />
		    </Trigger>
	    </Style.Triggers>
	    <Setter Property="TextDecorations" Value="Underline" />
    </Style>

	<Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="Foreground" Value="#DDD"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1.0">
					<GradientStop Color="#FF232323" Offset="0"/>
					<GradientStop Color="#FF000000" Offset="1"/>
					<GradientStop Color="#FF393939" Offset="0.48"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="Background" Value="{StaticResource BackgroundControlBrush}"/>
					<Setter Property="IsTabStop" Value="False"/>
					<Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
					<Style.Resources>
						<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource HighlightColor}" />
						<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource ControlColor}" />
						<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
						<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{StaticResource InactiveSelectionHighlightColor}"/>
					</Style.Resources>
				</Style>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource HighlightColor}" />
			<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource ControlColor}" />
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
			<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{StaticResource InactiveSelectionHighlightColor}"/>
		</Style.Resources>
	</Style>
</ResourceDictionary>